name: Release

on:
  push:
    tags:
      - 'v*'

env:
  POETRY_VERSION: "1.7.1"

jobs:
  test:
    name: Test Before Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ env.POETRY_VERSION }}
    
    - name: Install dependencies
      run: poetry install --with test,dev
    
    - name: Run tests
      run: poetry run pytest tests/ -v --cov=zodic --cov-fail-under=85
    
    - name: Run quality checks
      run: |
        poetry run black --check zodic tests
        poetry run isort --check-only zodic tests
        poetry run flake8 zodic tests
        poetry run mypy zodic

  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ env.POETRY_VERSION }}
    
    - name: Build package
      run: poetry build
    
    - name: Check package
      run: |
        pip install twine
        twine check dist/*
    
    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      run: poetry publish
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -z "$PREV_TAG" ]; then
          # First release
          CHANGELOG="Initial release of Zodic v${{ steps.tag.outputs.tag }}"
        else
          # Generate changelog from commits
          CHANGELOG=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD | grep -v "^- Merge\|^- Update\|^- Bump")
        fi
        
        # Save changelog to file
        echo "$CHANGELOG" > changelog.txt
        
        # Set output for GitHub release
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        body: |
          ## What's Changed
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          ```bash
          pip install zodic==${{ steps.tag.outputs.tag }}
          ```
          
          ## Full Changelog
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.tag.outputs.prev_tag }}...${{ steps.tag.outputs.tag }}
        files: |
          dist/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Post-Release Notifications
    runs-on: ubuntu-latest
    needs: [build, github-release]
    
    steps:
    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Notify Discord (if webhook configured)
      if: secrets.DISCORD_WEBHOOK_URL != ''
      run: |
        curl -H "Content-Type: application/json" \
             -d "{\"content\": \"Zodic ${{ steps.tag.outputs.tag }} has been released! https://pypi.org/project/zodic/\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
    
    - name: Update package managers
      run: |
        echo "Consider updating:"
        echo "- conda-forge recipe"
        echo "- homebrew formula"
        echo "- arch linux AUR"