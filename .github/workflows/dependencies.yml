name: Dependencies

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  POETRY_VERSION: "1.7.1"

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ env.POETRY_VERSION }}
    
    - name: Update dependencies
      run: |
        poetry update
        poetry export -f requirements.txt --output requirements.txt --with dev
    
    - name: Run tests with updated dependencies
      run: |
        poetry install
        poetry run pytest tests/ -v --cov=zodic --cov-fail-under=80
    
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet poetry.lock; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Pull Request
      if: steps.changes.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies"
        title: "chore: update dependencies"
        body: |
          ## Dependency Updates
          
          This PR updates project dependencies to their latest versions.
          
          ### Changes
          - Updated poetry.lock with latest compatible versions
          - All tests pass with updated dependencies
          
          ### Review Checklist
          - [ ] Check for any breaking changes in updated packages
          - [ ] Verify all tests still pass
          - [ ] Review security advisories for updated packages
          
          Auto-generated by GitHub Actions.
        branch: chore/update-dependencies
        delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ env.POETRY_VERSION }}
    
    - name: Install dependencies
      run: poetry install --with dev
    
    - name: Run safety check
      run: poetry run safety check --ignore 70612 || echo "Safety check completed with warnings" --json --output safety-report.json
      continue-on-error: true
    
    - name: Run bandit security scan
      run: poetry run bandit -r zodic -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
    
    - name: Check for vulnerabilities
      run: |
        if [ -f safety-report.json ]; then
          VULNS=$(jq '.vulnerabilities | length' safety-report.json)
          if [ "$VULNS" -gt 0 ]; then
            echo "⚠️ Found $VULNS security vulnerabilities in dependencies"
            jq '.vulnerabilities[] | "- \(.package_name): \(.vulnerability)"' safety-report.json
            exit 1
          fi
        fi